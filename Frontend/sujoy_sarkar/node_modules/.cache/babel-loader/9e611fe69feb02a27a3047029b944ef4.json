{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clampValue = exports.roundValueToStep = exports.percentToValue = exports.valueToPercent = exports.countDecimalPlaces = exports.toPrecision = exports.maxSafeInteger = exports.minSafeInteger = void 0;\n\nvar assertions_1 = require(\"./assertions\");\n\nvar logger_1 = require(\"./logger\");\n\nexports.minSafeInteger = Number.MIN_SAFE_INTEGER || -9007199254740991;\nexports.maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar toNumber = function (value) {\n  var num = parseFloat(value);\n  return assertions_1.isNotNumber(num) ? 0 : num;\n};\n\nvar toPrecision = function (value, precision) {\n  var nextValue = toNumber(value);\n\n  var _pres = precision !== null && precision !== void 0 ? precision : 10;\n\n  var scaleFactor = Math.pow(10, _pres);\n  nextValue = Math.round(nextValue * scaleFactor) / scaleFactor;\n  return precision ? nextValue.toFixed(precision) : nextValue.toString();\n};\n\nexports.toPrecision = toPrecision;\n\nvar countDecimalPlaces = function (value) {\n  if (!Number.isFinite(value)) return 0;\n  var e = 1;\n  var p = 0;\n\n  while (Math.round(value * e) / e !== value) {\n    e *= 10;\n    p++;\n  }\n\n  return p;\n};\n\nexports.countDecimalPlaces = countDecimalPlaces;\n\nvar valueToPercent = function (value, min, max) {\n  return (value - min) * 100 / (max - min);\n};\n\nexports.valueToPercent = valueToPercent;\n\nvar percentToValue = function (percent, min, max) {\n  return (max - min) * percent + min;\n};\n\nexports.percentToValue = percentToValue;\n\nvar roundValueToStep = function (value, step) {\n  var nextValue = Math.round(value / step) * step;\n  var precision = exports.countDecimalPlaces(step);\n  return exports.toPrecision(nextValue, precision);\n};\n\nexports.roundValueToStep = roundValueToStep;\n\nvar clampValue = function (value, min, max) {\n  if (value === null) return value;\n  logger_1.warn({\n    condition: max < min,\n    message: '[Nature UI] clamp: max cannot be less than min'\n  });\n  return Math.min(Math.max(value, min), max);\n};\n\nexports.clampValue = clampValue;","map":{"version":3,"sources":["../src/numbers.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clampValue = exports.roundValueToStep = exports.percentToValue = exports.valueToPercent = exports.countDecimalPlaces = exports.toPrecision = exports.maxSafeInteger = exports.minSafeInteger = void 0;\nvar assertions_1 = require(\"./assertions\");\nvar logger_1 = require(\"./logger\");\nexports.minSafeInteger = Number.MIN_SAFE_INTEGER || -9007199254740991;\nexports.maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar toNumber = function (value) {\n    var num = parseFloat(value);\n    return assertions_1.isNotNumber(num) ? 0 : num;\n};\nvar toPrecision = function (value, precision) {\n    var nextValue = toNumber(value);\n    var _pres = precision !== null && precision !== void 0 ? precision : 10;\n    var scaleFactor = Math.pow(10, _pres);\n    nextValue = Math.round(nextValue * scaleFactor) / scaleFactor;\n    return precision ? nextValue.toFixed(precision) : nextValue.toString();\n};\nexports.toPrecision = toPrecision;\nvar countDecimalPlaces = function (value) {\n    if (!Number.isFinite(value))\n        return 0;\n    var e = 1;\n    var p = 0;\n    while (Math.round(value * e) / e !== value) {\n        e *= 10;\n        p++;\n    }\n    return p;\n};\nexports.countDecimalPlaces = countDecimalPlaces;\nvar valueToPercent = function (value, min, max) {\n    return ((value - min) * 100) / (max - min);\n};\nexports.valueToPercent = valueToPercent;\nvar percentToValue = function (percent, min, max) {\n    return (max - min) * percent + min;\n};\nexports.percentToValue = percentToValue;\nvar roundValueToStep = function (value, step) {\n    var nextValue = Math.round(value / step) * step;\n    var precision = exports.countDecimalPlaces(step);\n    return exports.toPrecision(nextValue, precision);\n};\nexports.roundValueToStep = roundValueToStep;\nvar clampValue = function (value, min, max) {\n    if (value === null)\n        return value;\n    logger_1.warn({\n        condition: max < min,\n        message: '[Nature UI] clamp: max cannot be less than min',\n    });\n    return Math.min(Math.max(value, min), max);\n};\nexports.clampValue = clampValue;\n//# sourceMappingURL=numbers.js.map"]},"metadata":{},"sourceType":"script"}