import React from 'react';
import { MDCLinearProgressFoundation } from '@material/linear-progress/foundation';
import { MDCLinearProgressAdapter } from '@material/linear-progress/adapter';
export interface LinearProgressProps<T> extends React.HTMLProps<T> {
    buffer?: number;
    bufferingDots?: boolean;
    className?: string;
    closed?: boolean;
    indeterminate?: boolean;
    progress?: number;
    reversed?: boolean;
    tag?: string;
}
interface LinearProgressState {
    classList: Set<string>;
}
declare class LinearProgress<T extends {} = HTMLDivElement> extends React.Component<LinearProgressProps<T>, LinearProgressState> {
    isComponentMounted: boolean;
    bufferElement: React.RefObject<HTMLDivElement>;
    primaryBarElement: React.RefObject<HTMLDivElement>;
    foundation: MDCLinearProgressFoundation;
    constructor(props: LinearProgressProps<T>);
    static defaultProps: LinearProgressProps<HTMLDivElement>;
    componentDidMount(): void;
    componentDidUpdate(prevProps: LinearProgressProps<T>): void;
    componentWillUnmount(): void;
    readonly adapter: MDCLinearProgressAdapter;
    readonly classes: string;
    render(): JSX.Element;
}
export default LinearProgress;
